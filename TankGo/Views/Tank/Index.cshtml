
@{
    ViewBag.Title = "Index";
}

<img id="imgTank" hidden src="~/Asset/Tank.png" />
<img id="imgTank_Left" hidden src="~/Asset/Tank_Left.png" />
<img id="imgTank_Right" hidden src="~/Asset/Tank_Right.png" />
<img id="imgTank_Down" hidden src="~/Asset/Tank_Down.png" />
<img id="imgWall" hidden src="~/Asset/Wall.png" />

<div class="row mt-2">
    <div class="col-md-5 mb-3">
        <!-- Button trigger modal -->
        <button type="button" class="btn btn-outline-danger " data-toggle="modal" data-target="#exampleModalCenter">
            Chọn bản đồ
        </button>

        <button class="btn  btn-success mt-1">
            BẮT ĐẦU
        </button>
    </div>
    <div class="col-md-12">
        <canvas id="mapMain"></canvas>
    </div>
   
</div>


<!-- Modal -->
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Chọn bản đồ</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    @{
                        var count = 0;
                    }
                    <div class="card-deck">
                        @for (int i = 0; i < 3; i++)
                        {
                            {
                                count = count + 1;
                        } 
                            <div class="card" style="width: 18rem;">
                                <img class="card-img-top" src="~/Asset/map.png" />

                                <div class="card-body">
                                    <a href="#" class="card-link selectmap" data-mapid="Map_@count">Bản đồ @count</a>

                                    @*<p class="card-text">Bản đồ @count</p>*@
                                </div>
                            </div>

                        }
                    </div>
                    <div class="card-deck mt-2">
                        @for (int i = 0; i < 3; i++)
                        {
                            {
                                count = count + 1;
                            }
                            <div class="card" style="width: 18rem;">
                                <img class="card-img-top" src="~/Asset/map.png" />

                                <div class="card-body">
                                    <a href="#" class="card-link selectmap" data-mapid="Map_@count">Bản đồ @count</a>
                                    
                                </div>
                            </div>

                        }
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                @*<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>*@
            </div>
        </div>
    </div>
</div>

@section js{
    <script>
        var Map = null, Cols = 0, Rows = 0;
        var imgTank = document.getElementById("imgTank");// $("#imgTank").val();
        var imgTank_Left = document.getElementById("imgTank_Left");
        var imgTank_Right = document.getElementById("imgTank_Right");
        var imgTank_Down = document.getElementById("imgTank_Down");
        var imgWall = document.getElementById("imgWall");//$("#imgWall").val();
        var canvas = document.getElementById('mapMain');
        var context = canvas.getContext('2d');
        var pxStart = 0, pyStart = 0;
        $(document).ready(function () {
            
            //context.beginPath();
            ////draw line with x
            //for (var i = 0; i < 37; i++) {
            //    context.moveTo(i * 30, 0);
            //    context.lineTo(i * 30, 1110);
            //}
            ////draw line with y
            //for (var i = 0; i < 37; i++) {
            //    context.moveTo(0, i * 30);
            //    context.lineTo(1110, i * 30);
            //}


            //context.closePath();
            //context.lineWidth = 1;
            //context.strokeStyle = '#6d4c41';//rgba(76, 175, 80, 0.7)

            ////'#3f51b5';
            //context.stroke();
            
            $(".selectmap").on("click", function (e) {
                e.preventDefault();
                $("#exampleModalCenter").modal("toggle");
                var mapid = $(this).data("mapid");
                $.ajax({
                    url: "/Tank/LoadMap?mapid=" + mapid,
                    success: function (data) {
                        //console.log(data);
                        Map = data.Map;
                        Cols = data.Cols;
                        Rows = data.Rows;
                        DrawMap();
                    },
                    error: function () {

                    }
                })
            });
            
        });
        function DrawMap() {
            if (Rows < 0 || Cols < 0 || Map == null) {
                alert("Không thể khởi tạo bản đồ.");
                return;
            }
            var widthMap = Cols * 30;
            var heightMap = Rows * 30;

            $("#mapMain").prop("width", widthMap);
            $("#mapMain").prop("height", heightMap);
            $("#mapMain").css("background-color", '#000');
            context.beginPath();
            //draw line with x
            //for (var i = 0; i <= Cols; i++) {
            //    context.moveTo(i * 30, 0);
            //    context.lineTo(i * 30, heightMap);
            //}
            ////draw line with y
            //for (var i = 0; i <= Rows; i++) {
            //    context.moveTo(0, i * 30);
            //    context.lineTo(widthMap, i * 30);
            //}
            $.each(Map, function (key, cell) {
                if (cell.Status == 1) {
                    context.drawImage(imgWall, (cell.Row *30),(cell.Col*30), 30, 30);
                }
                if (cell.Status == -1) {
                    //context.rotate(90);
                    pxStart = cell.Col;
                    pyStart = cell.Row;
                    context.drawImage(imgTank, (cell.Row * 30), (cell.Col * 30), 30 - 1, 30 - 1);
                }
            });
            context.fillStyle = "#9ea7b8";
            context.closePath();
            
            context.lineWidth = 1;
            context.strokeStyle = '#6d4c41';//rgba(76, 175, 80, 0.7)

            //'#3f51b5';
            context.stroke();

            
        }
        var Go = setInterval(function () {

        });

    </script>

}
