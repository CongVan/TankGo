
@{
    ViewBag.Title = "Index";
}
<style>
    .thumbnail {
        position: relative;
    }

    .caption {
        position: absolute;
        top: 45%;
        left: 0;
        width: 100%;
        color: white;
        font-size: 2em;
    }
    .sk-cube-grid {
  width: 40px;
  height: 40px;
  margin: 20px auto;
}

.sk-cube-grid .sk-cube {
  width: 33%;
  height: 33%;
  background-color: #ffffff;
  float: left;
  -webkit-animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
          animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
}
.sk-cube-grid .sk-cube1 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.sk-cube-grid .sk-cube2 {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s; }
.sk-cube-grid .sk-cube3 {
  -webkit-animation-delay: 0.4s;
          animation-delay: 0.4s; }
.sk-cube-grid .sk-cube4 {
  -webkit-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.sk-cube-grid .sk-cube5 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }
.sk-cube-grid .sk-cube6 {
  -webkit-animation-delay: 0.3s;
          animation-delay: 0.3s; }
.sk-cube-grid .sk-cube7 {
  -webkit-animation-delay: 0s;
          animation-delay: 0s; }
.sk-cube-grid .sk-cube8 {
  -webkit-animation-delay: 0.1s;
          animation-delay: 0.1s; }
.sk-cube-grid .sk-cube9 {
  -webkit-animation-delay: 0.2s;
          animation-delay: 0.2s; }

@@-webkit-keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1);
  }
}

@@keyframes sk-cubeGridScaleDelay {
  0%, 70%, 100% {
    -webkit-transform: scale3D(1, 1, 1);
            transform: scale3D(1, 1, 1);
  } 35% {
    -webkit-transform: scale3D(0, 0, 1);
            transform: scale3D(0, 0, 1);
  }
}
</style>
<img id="imgMario" hidden src="~/Asset/mario.png" />
<img id="imgPrincess" hidden src="~/Asset/princess.png" />
<img id="imgWall" hidden src="~/Asset/Wall.png" />
<img id="imgFoot" hidden src="~/Asset/footprint.png" />
<div id="loaderMain" style="width:100%;height:100%;position:fixed;background-color:#000000;opacity:0.3;display:none;z-index:1000">
    <div class="sk-cube-grid">
        <div class="sk-cube sk-cube1"></div>
        <div class="sk-cube sk-cube2"></div>
        <div class="sk-cube sk-cube3"></div>
        <div class="sk-cube sk-cube4"></div>
        <div class="sk-cube sk-cube5"></div>
        <div class="sk-cube sk-cube6"></div>
        <div class="sk-cube sk-cube7"></div>
        <div class="sk-cube sk-cube8"></div>
        <div class="sk-cube sk-cube9"></div>
    </div>
    <h6 class="text-center text-white">Đang tải bản đồ...</h6>
</div> 
<div class="row mt-2">

    <div class="col-md-10">
        <canvas id="mapMain"></canvas>
    </div>

</div>



@section js{
    <script>
        var OldMap,Map = null, Cols = 0, Rows = 0, Speed = 50;
        var widthMap = 0, heightMap = 0;
        
        var imgMario = document.getElementById("imgMario");// $("#imgTank").val();
        var imgPrincess = document.getElementById("imgPrincess")
        var imgWall = document.getElementById("imgWall");//$("#imgWall").val();
        var imgFoot = document.getElementById("imgFoot");
        var canvas = document.getElementById('mapMain');
        var intervalgo = null;
        var context = canvas.getContext('2d');
        var pxStart = 0, pyStart = 0, pyEnd = 0, pxEnd = 0;
        $(document).ajaxStart(function () {
            // Show image container
            $("#loaderMain").show();
        });
        $(document).ajaxComplete(function () {
            // Hide image container
            $("#loaderMain").hide();
        });
        $(document).ready(function () {

            //context.beginPath();
            ////draw line with x
            //for (var i = 0; i < 37; i++) {
            //    context.moveTo(i * 30, 0);
            //    context.lineTo(i * 30, 1110);
            //}
            ////draw line with y
            //for (var i = 0; i < 37; i++) {
            //    context.moveTo(0, i * 30);
            //    context.lineTo(1110, i * 30);
            //}


            //context.closePath();
            //context.lineWidth = 1;
            //context.strokeStyle = '#6d4c41';//rgba(76, 175, 80, 0.7)

            ////'#3f51b5';
            //context.stroke();

            $("#lstMap").on("change", function (e) {
                e.preventDefault();
                $("#LetGo").removeAttr("disabled");
                OldMap = null;
                ResetMap();
                //$("#exampleModalCenter").modal("hide");
                ////$("#").collapse('hide');
                //$('#accordion').collapse({
                //    toggle: false
                //})
                var mapid = $(this).val();
                if (mapid == "0") {
                    context.clearRect(0, 0, widthMap, heightMap);
                    $("#mapMain").css("background-image", "none");
                    $("#LetGo").attr("disabled", "disabled");
                    return;
                }
                $.ajax({
                    url: "/Tank/LoadMap?mapid=" + mapid,
                    cache: false,
                    success: function (data) {
                        //console.log(data);
                        Map = data.Map;
                        Cols = data.Cols;
                        Rows = data.Rows;
                        DrawMap();
                    },
                    error: function () {

                    }
                });
            });
            $("#LetGo").on("click", function () {
                
                if ($("#lstMap").val() == "0") {
                    alert('Vui lòng chọn bản đồ.');
                    return;
                }
                //ResetMap();
                //if (intervalgo != null) {
                //    clearInterval(intervalgo);
                //}
                $.ajax({
                    async: false,
                    cache: false,
                    url: "/Tank/LetGo",
                    //beforeSend: function () {
                    //    $("#loaderMain").css("display", "block");
                    //},
                    //complete: function () {
                    //    $("#loaderMain").css("display", "none");
                    //},
                    success: function (Map) {
                        console.log(Map);
                        ResetMap();
                        OldMap = Map;
                        
                        var i = 1;
                         intervalgo = setInterval(function () {
                            
                            if (i == Map.length - 2) {
                                clearInterval(intervalgo);
                            }
                            context.drawImage(imgMario, (Map[i].Col * 30), (Map[i].Row * 30), 30, 30);
                            i++;
                            $("#CountStep").text("Số bước đi: " + i);
                        }, Speed);

                        //$.each(Map, function (key, cell) {
                        //    context.drawImage(imgMario, (cell.Col * 30), (cell.Row * 30), 30, 30);

                        //});
                    }
                });
            });
            $("#lstStep").on("change", function () {
                Speed = $(this).val();
            });
        });
        function DrawMap() {
            context.clearRect(0, 0, widthMap, heightMap);
            $("#mapMain").css("background-image", "none");
            if (Rows < 0 || Cols < 0 || Map == null) {
                alert("Không thể khởi tạo bản đồ.");
                return;
            }
            widthMap = Cols * 30;
            heightMap = Rows * 30;

            $("#mapMain").prop("width", widthMap);
            $("#mapMain").prop("height", heightMap);
            $("#mapMain").css("background-image", 'linear-gradient(to left, rgba(0,0,0,0.5) 0%,rgba(0,0,0,0.5) 100%),url(/Asset/background.png)');
            context.beginPath();
            //draw line with x
            //for (var i = 0; i <= Cols; i++) {
            //    context.moveTo(i * 30, 0);
            //    context.lineTo(i * 30, heightMap);
            //}
            ////draw line with y
            //for (var i = 0; i <= Rows; i++) {
            //    context.moveTo(0, i * 30);
            //    context.lineTo(widthMap, i * 30);
            //}
            $.each(Map, function (key, cell) {
                switch (cell.Status) {
                    case 1: context.drawImage(imgWall, (cell.Col * 30), (cell.Row * 30), 30, 30); break;
                    case -1: {
                        pxStart = cell.Col;
                        pyStart = cell.Row;
                        context.drawImage(imgMario, (cell.Col * 30), (cell.Row * 30), 30, 30);
                        break;
                    }
                    case 99: {
                        pxEnd = cell.Col;
                        pyEnd = cell.Row;
                        context.drawImage(imgPrincess, (cell.Col * 30), (cell.Row * 30), 30, 30);
                        break;
                    }
                    default:
                        //context.drawImage(imgMario, (cell.Col * 30), (cell.Row * 30), 30, 30);
                        break;
                }



            });
            context.fillStyle = "#9ea7b8";
            context.closePath();

            context.lineWidth = 1;
            context.strokeStyle = '#6d4c41';//rgba(76, 175, 80, 0.7)

            //'#3f51b5';
            context.stroke();


        }
        function ResetMap() {
            $("#loaderMain").css("display", "block");
            if (intervalgo != null) {
                clearInterval(intervalgo);
            }
            
            if (OldMap != null) {
                $.each(OldMap, function (key, cell) {
                    if (cell.Status == 99 || cell.Status == -1) return;
                    context.clearRect((cell.Col * 30), (cell.Row * 30), 30, 30);
                });

            }
           // $("#loaderMain").css("display", "none");
        }

    </script>

}
